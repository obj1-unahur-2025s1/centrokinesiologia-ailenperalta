import pacientes.*
import aparatos.*

describe "test parte 1" {

  const leonardo = new Paciente(edad=40, nivelDolor=10, nivelFortaleza=20)
  const milena = new Paciente(edad=3, nivelDolor=30, nivelFortaleza=50)
  const magneto1 = new Magneto()
  const bicicleta1 = new Bicicleta()
  const minitramp1 = new Minitramp()

  test "Leonardo puede usar el magneto1" {
    assert.that(leonardo.puedeUsar(magneto1))
  }

  test "Leonardo puede usar el bicicleta1" {
    assert.that(leonardo.puedeUsar(bicicleta1))
  }

  test "Leonardo puede usar el minitramp1" {
    assert.that(leonardo.puedeUsar(minitramp1))
  }

  test "Milena puede usar el magneto1" {
    assert.that(milena.puedeUsar(magneto1))
  }

  test "Milena no puede usar el bicicleta1" {
    assert.notThat(milena.puedeUsar(bicicleta1))
  }

  test "Milena no puede usar el minitramp1" {
    assert.notThat(milena.puedeUsar(minitramp1))
  }

  test "Leonardo usa el magneto1 y su nivel de dolor baja a 9" {
    leonardo.usarAparato(magneto1)
    assert.equals(9, leonardo.nivelDolor())
  }

  test "Milena usa el magneto1 y su nivel de dolor baja a 27" {
    milena.usarAparato(magneto1)
    assert.equals(27, milena.nivelDolor())
  }

  test "Leonardo usa el bicicleta1 y su nivel de dolor baja a 6, y su fortaleza sube a 23" {
    leonardo.usarAparato(bicicleta1)
    assert.equals(6, leonardo.nivelDolor())
    assert.equals(23, leonardo.nivelFortaleza())
  }

  test "Leonardo usa el minitramp1 y su nivel de fortaleza sube a 24" {
    leonardo.usarAparato(minitramp1)
    assert.equals(24, leonardo.nivelFortaleza())
  }
}

describe "test parte 2" {

  const leonardo = new Paciente(edad=40, nivelDolor=10, nivelFortaleza=20, rutina=[magneto1, bicicleta1, minitramp1])
  const milena = new Paciente(edad=3, nivelDolor=30, nivelFortaleza=50, rutina=[magneto1, bicicleta1])
  const magneto1 = new Magneto()
  const bicicleta1 = new Bicicleta()
  const minitramp1 = new Minitramp()

  test "Leonardo puede hacer la rutina que tiene asignada." {
    assert.that(leonardo.puedeRealizarRutina())
  }

  test "Después de hacer su rutina una vez, el nivel de dolor de Leonardo baja a 5, y su fortaleza sube a 27." {
    leonardo.realizarSesionCompleta()
    assert.equals(5, leonardo.nivelDolor())
    assert.equals(27, leonardo.nivelFortaleza())
  }

  test "Milena no puede hacer la rutina que tiene asignada." {
    assert.notThat(milena.puedeRealizarRutina())
  }
}

describe "test parte 3" {

  const nicolas = new Resistente(edad=40, nivelDolor=10, nivelFortaleza=20, rutina=[magneto1, bicicleta1, minitramp1])
  const victoria = new Caprichoso(edad=30, nivelDolor=10, nivelFortaleza=40, rutina=[magneto1, bicicleta1])
  const julian = new Caprichoso(edad=20, nivelDolor=54, nivelFortaleza=50, rutina=[biciRoja, magnetoVerde, bicicleta1])
  const zoe = new RapidaRecuperacion(edad=50, nivelDolor=14, nivelFortaleza=40, rutina=[magneto1, bicicleta1, minitramp1])
  const magneto1 = new Magneto()
  const bicicleta1 = new Bicicleta()
  const minitramp1 = new Minitramp()
  const biciRoja = new Bicicleta(color="rojo")
  const magnetoVerde = new Magneto(color="verde")

  test "Nicolás puede hacer la rutina que tiene asignada." {
    assert.that(nicolas.puedeRealizarRutina())
  }

  test "Después de hacer la rutina una vez, el nivel de dolor de Nicolas baja a 5, y su fortaleza sube a 30." {
    nicolas.realizarSesionCompleta()
    assert.equals(5, nicolas.nivelDolor())
    assert.equals(30, nicolas.nivelFortaleza())
  }

  test "Victoria no puede hacer la rutina que tiene asignada." {
    assert.notThat(victoria.puedeRealizarRutina())
  }

  test "Julián puede hacer la rutina que tiene asignada." {
    assert.that(julian.puedeRealizarRutina())
  }

  test "Después de hacer la rutina una vez, el nivel de dolor de Julian baja a 29.3, y su fortaleza sube a 62." {
    julian.realizarSesionCompleta()
    assert.equals(29.3, julian.nivelDolor())
    assert.equals(62, julian.nivelFortaleza())
  }

  test "Zoe puede hacer la rutina que tiene asignada." {
    assert.that(zoe.puedeRealizarRutina())
  }

  test "Después de asignar puntosDolor valor 2, y de que Zoe haga su rutina una vez, su nivel de dolor baja a 6.6, y su fortaleza sube a 48." {
    puntosDolor.cantidad(2)
    zoe.realizarSesionCompleta()
    assert.equals(6.6, zoe.nivelDolor())
    assert.equals(48, zoe.nivelFortaleza())
  }
}


